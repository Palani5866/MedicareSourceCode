'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5485
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsLetters"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsLetters
    Inherits Global.System.Data.DataSet
    
    Private tabledt_Member_Policy As dt_Member_PolicyDataTable
    
    Private tabledt_Proposer As dt_ProposerDataTable
    
    Private tabledt_proposer_dependents As dt_proposer_dependentsDataTable
    
    Private tabledt_proposer_nomination As dt_proposer_nominationDataTable
    
    Private tabledt_proposer_ec As dt_proposer_ecDataTable
    
    Private tabledtAgent As dtAgentDataTable
    
    Private tableDT_AGENTCOMISSION As DT_AGENTCOMISSIONDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dt_Member_Policy")) Is Nothing) Then
                MyBase.Tables.Add(New dt_Member_PolicyDataTable(ds.Tables("dt_Member_Policy")))
            End If
            If (Not (ds.Tables("dt_Proposer")) Is Nothing) Then
                MyBase.Tables.Add(New dt_ProposerDataTable(ds.Tables("dt_Proposer")))
            End If
            If (Not (ds.Tables("dt_proposer_dependents")) Is Nothing) Then
                MyBase.Tables.Add(New dt_proposer_dependentsDataTable(ds.Tables("dt_proposer_dependents")))
            End If
            If (Not (ds.Tables("dt_proposer_nomination")) Is Nothing) Then
                MyBase.Tables.Add(New dt_proposer_nominationDataTable(ds.Tables("dt_proposer_nomination")))
            End If
            If (Not (ds.Tables("dt_proposer_ec")) Is Nothing) Then
                MyBase.Tables.Add(New dt_proposer_ecDataTable(ds.Tables("dt_proposer_ec")))
            End If
            If (Not (ds.Tables("dtAgent")) Is Nothing) Then
                MyBase.Tables.Add(New dtAgentDataTable(ds.Tables("dtAgent")))
            End If
            If (Not (ds.Tables("DT_AGENTCOMISSION")) Is Nothing) Then
                MyBase.Tables.Add(New DT_AGENTCOMISSIONDataTable(ds.Tables("DT_AGENTCOMISSION")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_Member_Policy() As dt_Member_PolicyDataTable
        Get
            Return Me.tabledt_Member_Policy
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_Proposer() As dt_ProposerDataTable
        Get
            Return Me.tabledt_Proposer
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_proposer_dependents() As dt_proposer_dependentsDataTable
        Get
            Return Me.tabledt_proposer_dependents
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_proposer_nomination() As dt_proposer_nominationDataTable
        Get
            Return Me.tabledt_proposer_nomination
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dt_proposer_ec() As dt_proposer_ecDataTable
        Get
            Return Me.tabledt_proposer_ec
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtAgent() As dtAgentDataTable
        Get
            Return Me.tabledtAgent
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DT_AGENTCOMISSION() As DT_AGENTCOMISSIONDataTable
        Get
            Return Me.tableDT_AGENTCOMISSION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsLetters = CType(MyBase.Clone,dsLetters)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("dt_Member_Policy")) Is Nothing) Then
                MyBase.Tables.Add(New dt_Member_PolicyDataTable(ds.Tables("dt_Member_Policy")))
            End If
            If (Not (ds.Tables("dt_Proposer")) Is Nothing) Then
                MyBase.Tables.Add(New dt_ProposerDataTable(ds.Tables("dt_Proposer")))
            End If
            If (Not (ds.Tables("dt_proposer_dependents")) Is Nothing) Then
                MyBase.Tables.Add(New dt_proposer_dependentsDataTable(ds.Tables("dt_proposer_dependents")))
            End If
            If (Not (ds.Tables("dt_proposer_nomination")) Is Nothing) Then
                MyBase.Tables.Add(New dt_proposer_nominationDataTable(ds.Tables("dt_proposer_nomination")))
            End If
            If (Not (ds.Tables("dt_proposer_ec")) Is Nothing) Then
                MyBase.Tables.Add(New dt_proposer_ecDataTable(ds.Tables("dt_proposer_ec")))
            End If
            If (Not (ds.Tables("dtAgent")) Is Nothing) Then
                MyBase.Tables.Add(New dtAgentDataTable(ds.Tables("dtAgent")))
            End If
            If (Not (ds.Tables("DT_AGENTCOMISSION")) Is Nothing) Then
                MyBase.Tables.Add(New DT_AGENTCOMISSIONDataTable(ds.Tables("DT_AGENTCOMISSION")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledt_Member_Policy = CType(MyBase.Tables("dt_Member_Policy"),dt_Member_PolicyDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_Member_Policy) Is Nothing) Then
                Me.tabledt_Member_Policy.InitVars
            End If
        End If
        Me.tabledt_Proposer = CType(MyBase.Tables("dt_Proposer"),dt_ProposerDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_Proposer) Is Nothing) Then
                Me.tabledt_Proposer.InitVars
            End If
        End If
        Me.tabledt_proposer_dependents = CType(MyBase.Tables("dt_proposer_dependents"),dt_proposer_dependentsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_proposer_dependents) Is Nothing) Then
                Me.tabledt_proposer_dependents.InitVars
            End If
        End If
        Me.tabledt_proposer_nomination = CType(MyBase.Tables("dt_proposer_nomination"),dt_proposer_nominationDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_proposer_nomination) Is Nothing) Then
                Me.tabledt_proposer_nomination.InitVars
            End If
        End If
        Me.tabledt_proposer_ec = CType(MyBase.Tables("dt_proposer_ec"),dt_proposer_ecDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledt_proposer_ec) Is Nothing) Then
                Me.tabledt_proposer_ec.InitVars
            End If
        End If
        Me.tabledtAgent = CType(MyBase.Tables("dtAgent"),dtAgentDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtAgent) Is Nothing) Then
                Me.tabledtAgent.InitVars
            End If
        End If
        Me.tableDT_AGENTCOMISSION = CType(MyBase.Tables("DT_AGENTCOMISSION"),DT_AGENTCOMISSIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDT_AGENTCOMISSION) Is Nothing) Then
                Me.tableDT_AGENTCOMISSION.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsLetters"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsLetters.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledt_Member_Policy = New dt_Member_PolicyDataTable
        MyBase.Tables.Add(Me.tabledt_Member_Policy)
        Me.tabledt_Proposer = New dt_ProposerDataTable
        MyBase.Tables.Add(Me.tabledt_Proposer)
        Me.tabledt_proposer_dependents = New dt_proposer_dependentsDataTable
        MyBase.Tables.Add(Me.tabledt_proposer_dependents)
        Me.tabledt_proposer_nomination = New dt_proposer_nominationDataTable
        MyBase.Tables.Add(Me.tabledt_proposer_nomination)
        Me.tabledt_proposer_ec = New dt_proposer_ecDataTable
        MyBase.Tables.Add(Me.tabledt_proposer_ec)
        Me.tabledtAgent = New dtAgentDataTable
        MyBase.Tables.Add(Me.tabledtAgent)
        Me.tableDT_AGENTCOMISSION = New DT_AGENTCOMISSIONDataTable
        MyBase.Tables.Add(Me.tableDT_AGENTCOMISSION)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_Member_Policy() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_Proposer() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_proposer_dependents() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_proposer_nomination() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedt_proposer_ec() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedtAgent() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDT_AGENTCOMISSION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsLetters = New dsLetters
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub dt_Member_PolicyRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_Member_PolicyRowChangeEvent)
    
    Public Delegate Sub dt_ProposerRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_ProposerRowChangeEvent)
    
    Public Delegate Sub dt_proposer_dependentsRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_proposer_dependentsRowChangeEvent)
    
    Public Delegate Sub dt_proposer_nominationRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_proposer_nominationRowChangeEvent)
    
    Public Delegate Sub dt_proposer_ecRowChangeEventHandler(ByVal sender As Object, ByVal e As dt_proposer_ecRowChangeEvent)
    
    Public Delegate Sub dtAgentRowChangeEventHandler(ByVal sender As Object, ByVal e As dtAgentRowChangeEvent)
    
    Public Delegate Sub DT_AGENTCOMISSIONRowChangeEventHandler(ByVal sender As Object, ByVal e As DT_AGENTCOMISSIONRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_Member_PolicyDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnFull_Name As Global.System.Data.DataColumn
        
        Private columnIC_NEW As Global.System.Data.DataColumn
        
        Private columnAdd1 As Global.System.Data.DataColumn
        
        Private columnAdd2 As Global.System.Data.DataColumn
        
        Private columnTown As Global.System.Data.DataColumn
        
        Private columnState As Global.System.Data.DataColumn
        
        Private columnPolicy_No As Global.System.Data.DataColumn
        
        Private columnPolicy_Type As Global.System.Data.DataColumn
        
        Private columnRequest_Date As Global.System.Data.DataColumn
        
        Private columnReceive_Date As Global.System.Data.DataColumn
        
        Private columnIndividual_Amount As Global.System.Data.DataColumn
        
        Private columnFamily_Amount As Global.System.Data.DataColumn
        
        Private columnFile_No As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnAdd3 As Global.System.Data.DataColumn
        
        Private columnAdd4 As Global.System.Data.DataColumn
        
        Private columnGST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_Member_Policy"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Full_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFull_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IC_NEWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIC_NEW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Add1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Add2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TownColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTown
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Policy_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPolicy_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Policy_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPolicy_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Request_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRequest_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Receive_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceive_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Individual_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndividual_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Family_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamily_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property File_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFile_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Add3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Add4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdd4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_Member_PolicyRow
            Get
                Return CType(Me.Rows(index),dt_Member_PolicyRow)
            End Get
        End Property
        
        Public Event dt_Member_PolicyRowChanging As dt_Member_PolicyRowChangeEventHandler
        
        Public Event dt_Member_PolicyRowChanged As dt_Member_PolicyRowChangeEventHandler
        
        Public Event dt_Member_PolicyRowDeleting As dt_Member_PolicyRowChangeEventHandler
        
        Public Event dt_Member_PolicyRowDeleted As dt_Member_PolicyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_Member_PolicyRow(ByVal row As dt_Member_PolicyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_Member_PolicyRow( _
                    ByVal ID As String,  _
                    ByVal Full_Name As String,  _
                    ByVal IC_NEW As String,  _
                    ByVal Add1 As String,  _
                    ByVal Add2 As String,  _
                    ByVal Town As String,  _
                    ByVal State As String,  _
                    ByVal Policy_No As String,  _
                    ByVal Policy_Type As String,  _
                    ByVal Request_Date As String,  _
                    ByVal Receive_Date As String,  _
                    ByVal Individual_Amount As String,  _
                    ByVal Family_Amount As String,  _
                    ByVal File_No As String,  _
                    ByVal Title As String,  _
                    ByVal Add3 As String,  _
                    ByVal Add4 As String,  _
                    ByVal GST As Boolean) As dt_Member_PolicyRow
            Dim rowdt_Member_PolicyRow As dt_Member_PolicyRow = CType(Me.NewRow,dt_Member_PolicyRow)
            Dim columnValuesArray() As Object = New Object() {ID, Full_Name, IC_NEW, Add1, Add2, Town, State, Policy_No, Policy_Type, Request_Date, Receive_Date, Individual_Amount, Family_Amount, File_No, Title, Add3, Add4, GST}
            rowdt_Member_PolicyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_Member_PolicyRow)
            Return rowdt_Member_PolicyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_Member_PolicyDataTable = CType(MyBase.Clone,dt_Member_PolicyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_Member_PolicyDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnFull_Name = MyBase.Columns("Full_Name")
            Me.columnIC_NEW = MyBase.Columns("IC_NEW")
            Me.columnAdd1 = MyBase.Columns("Add1")
            Me.columnAdd2 = MyBase.Columns("Add2")
            Me.columnTown = MyBase.Columns("Town")
            Me.columnState = MyBase.Columns("State")
            Me.columnPolicy_No = MyBase.Columns("Policy_No")
            Me.columnPolicy_Type = MyBase.Columns("Policy_Type")
            Me.columnRequest_Date = MyBase.Columns("Request_Date")
            Me.columnReceive_Date = MyBase.Columns("Receive_Date")
            Me.columnIndividual_Amount = MyBase.Columns("Individual_Amount")
            Me.columnFamily_Amount = MyBase.Columns("Family_Amount")
            Me.columnFile_No = MyBase.Columns("File_No")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnAdd3 = MyBase.Columns("Add3")
            Me.columnAdd4 = MyBase.Columns("Add4")
            Me.columnGST = MyBase.Columns("GST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnFull_Name = New Global.System.Data.DataColumn("Full_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFull_Name)
            Me.columnIC_NEW = New Global.System.Data.DataColumn("IC_NEW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIC_NEW)
            Me.columnAdd1 = New Global.System.Data.DataColumn("Add1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdd1)
            Me.columnAdd2 = New Global.System.Data.DataColumn("Add2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdd2)
            Me.columnTown = New Global.System.Data.DataColumn("Town", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTown)
            Me.columnState = New Global.System.Data.DataColumn("State", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnState)
            Me.columnPolicy_No = New Global.System.Data.DataColumn("Policy_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPolicy_No)
            Me.columnPolicy_Type = New Global.System.Data.DataColumn("Policy_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPolicy_Type)
            Me.columnRequest_Date = New Global.System.Data.DataColumn("Request_Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRequest_Date)
            Me.columnReceive_Date = New Global.System.Data.DataColumn("Receive_Date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceive_Date)
            Me.columnIndividual_Amount = New Global.System.Data.DataColumn("Individual_Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndividual_Amount)
            Me.columnFamily_Amount = New Global.System.Data.DataColumn("Family_Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamily_Amount)
            Me.columnFile_No = New Global.System.Data.DataColumn("File_No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFile_No)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnAdd3 = New Global.System.Data.DataColumn("Add3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdd3)
            Me.columnAdd4 = New Global.System.Data.DataColumn("Add4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdd4)
            Me.columnGST = New Global.System.Data.DataColumn("GST", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGST)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_Member_PolicyRow() As dt_Member_PolicyRow
            Return CType(Me.NewRow,dt_Member_PolicyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_Member_PolicyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_Member_PolicyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_Member_PolicyRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_Member_PolicyRowChanged(Me, New dt_Member_PolicyRowChangeEvent(CType(e.Row,dt_Member_PolicyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_Member_PolicyRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_Member_PolicyRowChanging(Me, New dt_Member_PolicyRowChangeEvent(CType(e.Row,dt_Member_PolicyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_Member_PolicyRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_Member_PolicyRowDeleted(Me, New dt_Member_PolicyRowChangeEvent(CType(e.Row,dt_Member_PolicyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_Member_PolicyRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_Member_PolicyRowDeleting(Me, New dt_Member_PolicyRowChangeEvent(CType(e.Row,dt_Member_PolicyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_Member_PolicyRow(ByVal row As dt_Member_PolicyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_Member_PolicyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_ProposerDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columntitle As Global.System.Data.DataColumn
        
        Private columnfull_name As Global.System.Data.DataColumn
        
        Private columnic_new As Global.System.Data.DataColumn
        
        Private columnic_old As Global.System.Data.DataColumn
        
        Private columndob As Global.System.Data.DataColumn
        
        Private columnrace As Global.System.Data.DataColumn
        
        Private columnmarital_status As Global.System.Data.DataColumn
        
        Private columnsex As Global.System.Data.DataColumn
        
        Private columnproposal_received_date As Global.System.Data.DataColumn
        
        Private columnproposal_signed_date As Global.System.Data.DataColumn
        
        Private columnadd1 As Global.System.Data.DataColumn
        
        Private columnadd2 As Global.System.Data.DataColumn
        
        Private columnadd3 As Global.System.Data.DataColumn
        
        Private columnadd4 As Global.System.Data.DataColumn
        
        Private columntown As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        Private columnposcode As Global.System.Data.DataColumn
        
        Private columnphone_house As Global.System.Data.DataColumn
        
        Private columnphone_mobile As Global.System.Data.DataColumn
        
        Private columnphone_off As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columnheight As Global.System.Data.DataColumn
        
        Private columnweight As Global.System.Data.DataColumn
        
        Private columnOccupation As Global.System.Data.DataColumn
        
        Private columndepartment As Global.System.Data.DataColumn
        
        Private columnplan_code As Global.System.Data.DataColumn
        
        Private columnplan_type As Global.System.Data.DataColumn
        
        Private columnpremium As Global.System.Data.DataColumn
        
        Private columnspecial_promo As Global.System.Data.DataColumn
        
        Private columnunderwriting_required As Global.System.Data.DataColumn
        
        Private columnpayment_type As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columncc_batch_no As Global.System.Data.DataColumn
        
        Private columncc_aproval_code As Global.System.Data.DataColumn
        
        Private columncc_invoice_no As Global.System.Data.DataColumn
        
        Private columnchq_no As Global.System.Data.DataColumn
        
        Private columnchq_receipt_no As Global.System.Data.DataColumn
        
        Private columncash_receipt_no As Global.System.Data.DataColumn
        
        Private columncash_receipt_issued As Global.System.Data.DataColumn
        
        Private columnbiro_angkasa_no As Global.System.Data.DataColumn
        
        Private columnde_chk_lst As Global.System.Data.DataColumn
        
        Private columnde_chk_lst_enrld_dependent As Global.System.Data.DataColumn
        
        Private columnde_chk_lst_insurace_proposed As Global.System.Data.DataColumn
        
        Private columnde_chk_lst_nomination As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_app_frm As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_app_frm_status As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_ic As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_pentaya As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_payslip As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_payslip_status As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_borang1_79 As Global.System.Data.DataColumn
        
        Private columndoc_chk_lst_borang1_79_status As Global.System.Data.DataColumn
        
        Private columnstatus As Global.System.Data.DataColumn
        
        Private columncreated_by As Global.System.Data.DataColumn
        
        Private columncreated_on As Global.System.Data.DataColumn
        
        Private columnverify_by As Global.System.Data.DataColumn
        
        Private columnverify_on As Global.System.Data.DataColumn
        
        Private columnprinted_by As Global.System.Data.DataColumn
        
        Private columnprinted_on As Global.System.Data.DataColumn
        
        Private columndecline_reason As Global.System.Data.DataColumn
        
        Private columnfile_no As Global.System.Data.DataColumn
        
        Private columnsubmission_batch_no As Global.System.Data.DataColumn
        
        Private columnsubmitted_by As Global.System.Data.DataColumn
        
        Private columnsubmitted_on As Global.System.Data.DataColumn
        
        Private columnagent_code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_Proposer"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property full_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfull_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_newColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_new
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_oldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_old
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property raceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrace
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property marital_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarital_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proposal_received_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproposal_received_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proposal_signed_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproposal_signed_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property townColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntown
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poscodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property phone_houseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnphone_house
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property phone_mobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnphone_mobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property phone_offColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnphone_off
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property heightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OccupationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOccupation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property departmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property plan_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplan_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property plan_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplan_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property premiumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpremium
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property special_promoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspecial_promo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property underwriting_requiredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunderwriting_required
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_batch_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_batch_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_aproval_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_aproval_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cc_invoice_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc_invoice_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property chq_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchq_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property chq_receipt_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnchq_receipt_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cash_receipt_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncash_receipt_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cash_receipt_issuedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncash_receipt_issued
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property biro_angkasa_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbiro_angkasa_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property de_chk_lstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnde_chk_lst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property de_chk_lst_enrld_dependentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnde_chk_lst_enrld_dependent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property de_chk_lst_insurace_proposedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnde_chk_lst_insurace_proposed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property de_chk_lst_nominationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnde_chk_lst_nomination
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_app_frmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_app_frm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_app_frm_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_app_frm_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_icColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_ic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_pentayaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_pentaya
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_payslipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_payslip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_payslip_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_payslip_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_borang1_79Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_borang1_79
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_chk_lst_borang1_79_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_chk_lst_borang1_79_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property created_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property created_onColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated_on
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property verify_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnverify_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property verify_onColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnverify_on
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property printed_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprinted_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property printed_onColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprinted_on
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property decline_reasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecline_reason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property file_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfile_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property submission_batch_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubmission_batch_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property submitted_byColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubmitted_by
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property submitted_onColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubmitted_on
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property agent_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnagent_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_ProposerRow
            Get
                Return CType(Me.Rows(index),dt_ProposerRow)
            End Get
        End Property
        
        Public Event dt_ProposerRowChanging As dt_ProposerRowChangeEventHandler
        
        Public Event dt_ProposerRowChanged As dt_ProposerRowChangeEventHandler
        
        Public Event dt_ProposerRowDeleting As dt_ProposerRowChangeEventHandler
        
        Public Event dt_ProposerRowDeleted As dt_ProposerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_ProposerRow(ByVal row As dt_ProposerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_ProposerRow( _
                    ByVal id As String,  _
                    ByVal title As String,  _
                    ByVal full_name As String,  _
                    ByVal ic_new As String,  _
                    ByVal ic_old As String,  _
                    ByVal dob As Date,  _
                    ByVal race As String,  _
                    ByVal marital_status As String,  _
                    ByVal sex As String,  _
                    ByVal proposal_received_date As String,  _
                    ByVal proposal_signed_date As String,  _
                    ByVal add1 As String,  _
                    ByVal add2 As String,  _
                    ByVal add3 As String,  _
                    ByVal add4 As String,  _
                    ByVal town As String,  _
                    ByVal state As String,  _
                    ByVal poscode As String,  _
                    ByVal phone_house As String,  _
                    ByVal phone_mobile As String,  _
                    ByVal phone_off As String,  _
                    ByVal email As String,  _
                    ByVal height As String,  _
                    ByVal weight As String,  _
                    ByVal Occupation As String,  _
                    ByVal department As String,  _
                    ByVal plan_code As String,  _
                    ByVal plan_type As String,  _
                    ByVal premium As String,  _
                    ByVal special_promo As String,  _
                    ByVal underwriting_required As String,  _
                    ByVal payment_type As String,  _
                    ByVal payment_method As String,  _
                    ByVal cc_batch_no As String,  _
                    ByVal cc_aproval_code As String,  _
                    ByVal cc_invoice_no As String,  _
                    ByVal chq_no As String,  _
                    ByVal chq_receipt_no As String,  _
                    ByVal cash_receipt_no As String,  _
                    ByVal cash_receipt_issued As String,  _
                    ByVal biro_angkasa_no As String,  _
                    ByVal de_chk_lst As String,  _
                    ByVal de_chk_lst_enrld_dependent As String,  _
                    ByVal de_chk_lst_insurace_proposed As String,  _
                    ByVal de_chk_lst_nomination As String,  _
                    ByVal doc_chk_lst_app_frm As String,  _
                    ByVal doc_chk_lst_app_frm_status As String,  _
                    ByVal doc_chk_lst_ic As String,  _
                    ByVal doc_chk_lst_pentaya As String,  _
                    ByVal doc_chk_lst_payslip As String,  _
                    ByVal doc_chk_lst_payslip_status As String,  _
                    ByVal doc_chk_lst_borang1_79 As String,  _
                    ByVal doc_chk_lst_borang1_79_status As String,  _
                    ByVal status As String,  _
                    ByVal created_by As String,  _
                    ByVal created_on As String,  _
                    ByVal verify_by As String,  _
                    ByVal verify_on As String,  _
                    ByVal printed_by As String,  _
                    ByVal printed_on As String,  _
                    ByVal decline_reason As String,  _
                    ByVal file_no As String,  _
                    ByVal submission_batch_no As String,  _
                    ByVal submitted_by As String,  _
                    ByVal submitted_on As String,  _
                    ByVal agent_code As String) As dt_ProposerRow
            Dim rowdt_ProposerRow As dt_ProposerRow = CType(Me.NewRow,dt_ProposerRow)
            Dim columnValuesArray() As Object = New Object() {id, title, full_name, ic_new, ic_old, dob, race, marital_status, sex, proposal_received_date, proposal_signed_date, add1, add2, add3, add4, town, state, poscode, phone_house, phone_mobile, phone_off, email, height, weight, Occupation, department, plan_code, plan_type, premium, special_promo, underwriting_required, payment_type, payment_method, cc_batch_no, cc_aproval_code, cc_invoice_no, chq_no, chq_receipt_no, cash_receipt_no, cash_receipt_issued, biro_angkasa_no, de_chk_lst, de_chk_lst_enrld_dependent, de_chk_lst_insurace_proposed, de_chk_lst_nomination, doc_chk_lst_app_frm, doc_chk_lst_app_frm_status, doc_chk_lst_ic, doc_chk_lst_pentaya, doc_chk_lst_payslip, doc_chk_lst_payslip_status, doc_chk_lst_borang1_79, doc_chk_lst_borang1_79_status, status, created_by, created_on, verify_by, verify_on, printed_by, printed_on, decline_reason, file_no, submission_batch_no, submitted_by, submitted_on, agent_code}
            rowdt_ProposerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_ProposerRow)
            Return rowdt_ProposerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_ProposerDataTable = CType(MyBase.Clone,dt_ProposerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_ProposerDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columntitle = MyBase.Columns("title")
            Me.columnfull_name = MyBase.Columns("full_name")
            Me.columnic_new = MyBase.Columns("ic_new")
            Me.columnic_old = MyBase.Columns("ic_old")
            Me.columndob = MyBase.Columns("dob")
            Me.columnrace = MyBase.Columns("race")
            Me.columnmarital_status = MyBase.Columns("marital_status")
            Me.columnsex = MyBase.Columns("sex")
            Me.columnproposal_received_date = MyBase.Columns("proposal_received_date")
            Me.columnproposal_signed_date = MyBase.Columns("proposal_signed_date")
            Me.columnadd1 = MyBase.Columns("add1")
            Me.columnadd2 = MyBase.Columns("add2")
            Me.columnadd3 = MyBase.Columns("add3")
            Me.columnadd4 = MyBase.Columns("add4")
            Me.columntown = MyBase.Columns("town")
            Me.columnstate = MyBase.Columns("state")
            Me.columnposcode = MyBase.Columns("poscode")
            Me.columnphone_house = MyBase.Columns("phone_house")
            Me.columnphone_mobile = MyBase.Columns("phone_mobile")
            Me.columnphone_off = MyBase.Columns("phone_off")
            Me.columnemail = MyBase.Columns("email")
            Me.columnheight = MyBase.Columns("height")
            Me.columnweight = MyBase.Columns("weight")
            Me.columnOccupation = MyBase.Columns("Occupation")
            Me.columndepartment = MyBase.Columns("department")
            Me.columnplan_code = MyBase.Columns("plan_code")
            Me.columnplan_type = MyBase.Columns("plan_type")
            Me.columnpremium = MyBase.Columns("premium")
            Me.columnspecial_promo = MyBase.Columns("special_promo")
            Me.columnunderwriting_required = MyBase.Columns("underwriting_required")
            Me.columnpayment_type = MyBase.Columns("payment_type")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columncc_batch_no = MyBase.Columns("cc_batch_no")
            Me.columncc_aproval_code = MyBase.Columns("cc_aproval_code")
            Me.columncc_invoice_no = MyBase.Columns("cc_invoice_no")
            Me.columnchq_no = MyBase.Columns("chq_no")
            Me.columnchq_receipt_no = MyBase.Columns("chq_receipt_no")
            Me.columncash_receipt_no = MyBase.Columns("cash_receipt_no")
            Me.columncash_receipt_issued = MyBase.Columns("cash_receipt_issued")
            Me.columnbiro_angkasa_no = MyBase.Columns("biro_angkasa_no")
            Me.columnde_chk_lst = MyBase.Columns("de_chk_lst")
            Me.columnde_chk_lst_enrld_dependent = MyBase.Columns("de_chk_lst_enrld_dependent")
            Me.columnde_chk_lst_insurace_proposed = MyBase.Columns("de_chk_lst_insurace_proposed")
            Me.columnde_chk_lst_nomination = MyBase.Columns("de_chk_lst_nomination")
            Me.columndoc_chk_lst_app_frm = MyBase.Columns("doc_chk_lst_app_frm")
            Me.columndoc_chk_lst_app_frm_status = MyBase.Columns("doc_chk_lst_app_frm_status")
            Me.columndoc_chk_lst_ic = MyBase.Columns("doc_chk_lst_ic")
            Me.columndoc_chk_lst_pentaya = MyBase.Columns("doc_chk_lst_pentaya")
            Me.columndoc_chk_lst_payslip = MyBase.Columns("doc_chk_lst_payslip")
            Me.columndoc_chk_lst_payslip_status = MyBase.Columns("doc_chk_lst_payslip_status")
            Me.columndoc_chk_lst_borang1_79 = MyBase.Columns("doc_chk_lst_borang1_79")
            Me.columndoc_chk_lst_borang1_79_status = MyBase.Columns("doc_chk_lst_borang1_79_status")
            Me.columnstatus = MyBase.Columns("status")
            Me.columncreated_by = MyBase.Columns("created_by")
            Me.columncreated_on = MyBase.Columns("created_on")
            Me.columnverify_by = MyBase.Columns("verify_by")
            Me.columnverify_on = MyBase.Columns("verify_on")
            Me.columnprinted_by = MyBase.Columns("printed_by")
            Me.columnprinted_on = MyBase.Columns("printed_on")
            Me.columndecline_reason = MyBase.Columns("decline_reason")
            Me.columnfile_no = MyBase.Columns("file_no")
            Me.columnsubmission_batch_no = MyBase.Columns("submission_batch_no")
            Me.columnsubmitted_by = MyBase.Columns("submitted_by")
            Me.columnsubmitted_on = MyBase.Columns("submitted_on")
            Me.columnagent_code = MyBase.Columns("agent_code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columntitle = New Global.System.Data.DataColumn("title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle)
            Me.columnfull_name = New Global.System.Data.DataColumn("full_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfull_name)
            Me.columnic_new = New Global.System.Data.DataColumn("ic_new", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_new)
            Me.columnic_old = New Global.System.Data.DataColumn("ic_old", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_old)
            Me.columndob = New Global.System.Data.DataColumn("dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndob)
            Me.columnrace = New Global.System.Data.DataColumn("race", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrace)
            Me.columnmarital_status = New Global.System.Data.DataColumn("marital_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarital_status)
            Me.columnsex = New Global.System.Data.DataColumn("sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsex)
            Me.columnproposal_received_date = New Global.System.Data.DataColumn("proposal_received_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproposal_received_date)
            Me.columnproposal_signed_date = New Global.System.Data.DataColumn("proposal_signed_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproposal_signed_date)
            Me.columnadd1 = New Global.System.Data.DataColumn("add1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd1)
            Me.columnadd2 = New Global.System.Data.DataColumn("add2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd2)
            Me.columnadd3 = New Global.System.Data.DataColumn("add3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd3)
            Me.columnadd4 = New Global.System.Data.DataColumn("add4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd4)
            Me.columntown = New Global.System.Data.DataColumn("town", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntown)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnposcode = New Global.System.Data.DataColumn("poscode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposcode)
            Me.columnphone_house = New Global.System.Data.DataColumn("phone_house", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphone_house)
            Me.columnphone_mobile = New Global.System.Data.DataColumn("phone_mobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphone_mobile)
            Me.columnphone_off = New Global.System.Data.DataColumn("phone_off", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnphone_off)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columnheight = New Global.System.Data.DataColumn("height", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheight)
            Me.columnweight = New Global.System.Data.DataColumn("weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweight)
            Me.columnOccupation = New Global.System.Data.DataColumn("Occupation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOccupation)
            Me.columndepartment = New Global.System.Data.DataColumn("department", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartment)
            Me.columnplan_code = New Global.System.Data.DataColumn("plan_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplan_code)
            Me.columnplan_type = New Global.System.Data.DataColumn("plan_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplan_type)
            Me.columnpremium = New Global.System.Data.DataColumn("premium", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpremium)
            Me.columnspecial_promo = New Global.System.Data.DataColumn("special_promo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspecial_promo)
            Me.columnunderwriting_required = New Global.System.Data.DataColumn("underwriting_required", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunderwriting_required)
            Me.columnpayment_type = New Global.System.Data.DataColumn("payment_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_type)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columncc_batch_no = New Global.System.Data.DataColumn("cc_batch_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_batch_no)
            Me.columncc_aproval_code = New Global.System.Data.DataColumn("cc_aproval_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_aproval_code)
            Me.columncc_invoice_no = New Global.System.Data.DataColumn("cc_invoice_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc_invoice_no)
            Me.columnchq_no = New Global.System.Data.DataColumn("chq_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchq_no)
            Me.columnchq_receipt_no = New Global.System.Data.DataColumn("chq_receipt_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchq_receipt_no)
            Me.columncash_receipt_no = New Global.System.Data.DataColumn("cash_receipt_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncash_receipt_no)
            Me.columncash_receipt_issued = New Global.System.Data.DataColumn("cash_receipt_issued", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncash_receipt_issued)
            Me.columnbiro_angkasa_no = New Global.System.Data.DataColumn("biro_angkasa_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbiro_angkasa_no)
            Me.columnde_chk_lst = New Global.System.Data.DataColumn("de_chk_lst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnde_chk_lst)
            Me.columnde_chk_lst_enrld_dependent = New Global.System.Data.DataColumn("de_chk_lst_enrld_dependent", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnde_chk_lst_enrld_dependent)
            Me.columnde_chk_lst_insurace_proposed = New Global.System.Data.DataColumn("de_chk_lst_insurace_proposed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnde_chk_lst_insurace_proposed)
            Me.columnde_chk_lst_nomination = New Global.System.Data.DataColumn("de_chk_lst_nomination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnde_chk_lst_nomination)
            Me.columndoc_chk_lst_app_frm = New Global.System.Data.DataColumn("doc_chk_lst_app_frm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_app_frm)
            Me.columndoc_chk_lst_app_frm_status = New Global.System.Data.DataColumn("doc_chk_lst_app_frm_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_app_frm_status)
            Me.columndoc_chk_lst_ic = New Global.System.Data.DataColumn("doc_chk_lst_ic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_ic)
            Me.columndoc_chk_lst_pentaya = New Global.System.Data.DataColumn("doc_chk_lst_pentaya", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_pentaya)
            Me.columndoc_chk_lst_payslip = New Global.System.Data.DataColumn("doc_chk_lst_payslip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_payslip)
            Me.columndoc_chk_lst_payslip_status = New Global.System.Data.DataColumn("doc_chk_lst_payslip_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_payslip_status)
            Me.columndoc_chk_lst_borang1_79 = New Global.System.Data.DataColumn("doc_chk_lst_borang1_79", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_borang1_79)
            Me.columndoc_chk_lst_borang1_79_status = New Global.System.Data.DataColumn("doc_chk_lst_borang1_79_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_chk_lst_borang1_79_status)
            Me.columnstatus = New Global.System.Data.DataColumn("status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus)
            Me.columncreated_by = New Global.System.Data.DataColumn("created_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated_by)
            Me.columncreated_on = New Global.System.Data.DataColumn("created_on", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated_on)
            Me.columnverify_by = New Global.System.Data.DataColumn("verify_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnverify_by)
            Me.columnverify_on = New Global.System.Data.DataColumn("verify_on", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnverify_on)
            Me.columnprinted_by = New Global.System.Data.DataColumn("printed_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprinted_by)
            Me.columnprinted_on = New Global.System.Data.DataColumn("printed_on", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprinted_on)
            Me.columndecline_reason = New Global.System.Data.DataColumn("decline_reason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecline_reason)
            Me.columnfile_no = New Global.System.Data.DataColumn("file_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfile_no)
            Me.columnsubmission_batch_no = New Global.System.Data.DataColumn("submission_batch_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubmission_batch_no)
            Me.columnsubmitted_by = New Global.System.Data.DataColumn("submitted_by", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubmitted_by)
            Me.columnsubmitted_on = New Global.System.Data.DataColumn("submitted_on", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubmitted_on)
            Me.columnagent_code = New Global.System.Data.DataColumn("agent_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnagent_code)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_ProposerRow() As dt_ProposerRow
            Return CType(Me.NewRow,dt_ProposerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_ProposerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_ProposerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_ProposerRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_ProposerRowChanged(Me, New dt_ProposerRowChangeEvent(CType(e.Row,dt_ProposerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_ProposerRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_ProposerRowChanging(Me, New dt_ProposerRowChangeEvent(CType(e.Row,dt_ProposerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_ProposerRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_ProposerRowDeleted(Me, New dt_ProposerRowChangeEvent(CType(e.Row,dt_ProposerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_ProposerRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_ProposerRowDeleting(Me, New dt_ProposerRowChangeEvent(CType(e.Row,dt_ProposerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_ProposerRow(ByVal row As dt_ProposerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_ProposerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_proposer_dependentsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnproposer_id As Global.System.Data.DataColumn
        
        Private columntitle As Global.System.Data.DataColumn
        
        Private columnfull_name As Global.System.Data.DataColumn
        
        Private columnic_new As Global.System.Data.DataColumn
        
        Private columnic_old As Global.System.Data.DataColumn
        
        Private columndob As Global.System.Data.DataColumn
        
        Private columnrace As Global.System.Data.DataColumn
        
        Private columnmarital_status As Global.System.Data.DataColumn
        
        Private columnsex As Global.System.Data.DataColumn
        
        Private columnrelationship As Global.System.Data.DataColumn
        
        Private columnheight As Global.System.Data.DataColumn
        
        Private columnweight As Global.System.Data.DataColumn
        
        Private columnoccupation As Global.System.Data.DataColumn
        
        Private columndepartment As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_proposer_dependents"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proposer_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproposer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property full_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfull_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_newColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_new
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ic_oldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnic_old
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property raceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrace
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property marital_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarital_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property relationshipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrelationship
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property heightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnheight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property weightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property occupationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoccupation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property departmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepartment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_proposer_dependentsRow
            Get
                Return CType(Me.Rows(index),dt_proposer_dependentsRow)
            End Get
        End Property
        
        Public Event dt_proposer_dependentsRowChanging As dt_proposer_dependentsRowChangeEventHandler
        
        Public Event dt_proposer_dependentsRowChanged As dt_proposer_dependentsRowChangeEventHandler
        
        Public Event dt_proposer_dependentsRowDeleting As dt_proposer_dependentsRowChangeEventHandler
        
        Public Event dt_proposer_dependentsRowDeleted As dt_proposer_dependentsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_proposer_dependentsRow(ByVal row As dt_proposer_dependentsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_proposer_dependentsRow(ByVal id As String, ByVal proposer_id As String, ByVal title As String, ByVal full_name As String, ByVal ic_new As String, ByVal ic_old As String, ByVal dob As Date, ByVal race As String, ByVal marital_status As String, ByVal sex As String, ByVal relationship As String, ByVal height As String, ByVal weight As String, ByVal occupation As String, ByVal department As String) As dt_proposer_dependentsRow
            Dim rowdt_proposer_dependentsRow As dt_proposer_dependentsRow = CType(Me.NewRow,dt_proposer_dependentsRow)
            Dim columnValuesArray() As Object = New Object() {id, proposer_id, title, full_name, ic_new, ic_old, dob, race, marital_status, sex, relationship, height, weight, occupation, department}
            rowdt_proposer_dependentsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_proposer_dependentsRow)
            Return rowdt_proposer_dependentsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_proposer_dependentsDataTable = CType(MyBase.Clone,dt_proposer_dependentsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_proposer_dependentsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnproposer_id = MyBase.Columns("proposer_id")
            Me.columntitle = MyBase.Columns("title")
            Me.columnfull_name = MyBase.Columns("full_name")
            Me.columnic_new = MyBase.Columns("ic_new")
            Me.columnic_old = MyBase.Columns("ic_old")
            Me.columndob = MyBase.Columns("dob")
            Me.columnrace = MyBase.Columns("race")
            Me.columnmarital_status = MyBase.Columns("marital_status")
            Me.columnsex = MyBase.Columns("sex")
            Me.columnrelationship = MyBase.Columns("relationship")
            Me.columnheight = MyBase.Columns("height")
            Me.columnweight = MyBase.Columns("weight")
            Me.columnoccupation = MyBase.Columns("occupation")
            Me.columndepartment = MyBase.Columns("department")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnproposer_id = New Global.System.Data.DataColumn("proposer_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproposer_id)
            Me.columntitle = New Global.System.Data.DataColumn("title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle)
            Me.columnfull_name = New Global.System.Data.DataColumn("full_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfull_name)
            Me.columnic_new = New Global.System.Data.DataColumn("ic_new", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_new)
            Me.columnic_old = New Global.System.Data.DataColumn("ic_old", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnic_old)
            Me.columndob = New Global.System.Data.DataColumn("dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndob)
            Me.columnrace = New Global.System.Data.DataColumn("race", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrace)
            Me.columnmarital_status = New Global.System.Data.DataColumn("marital_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarital_status)
            Me.columnsex = New Global.System.Data.DataColumn("sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsex)
            Me.columnrelationship = New Global.System.Data.DataColumn("relationship", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrelationship)
            Me.columnheight = New Global.System.Data.DataColumn("height", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnheight)
            Me.columnweight = New Global.System.Data.DataColumn("weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweight)
            Me.columnoccupation = New Global.System.Data.DataColumn("occupation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoccupation)
            Me.columndepartment = New Global.System.Data.DataColumn("department", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepartment)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_proposer_dependentsRow() As dt_proposer_dependentsRow
            Return CType(Me.NewRow,dt_proposer_dependentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_proposer_dependentsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_proposer_dependentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_proposer_dependentsRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_proposer_dependentsRowChanged(Me, New dt_proposer_dependentsRowChangeEvent(CType(e.Row,dt_proposer_dependentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_proposer_dependentsRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_proposer_dependentsRowChanging(Me, New dt_proposer_dependentsRowChangeEvent(CType(e.Row,dt_proposer_dependentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_proposer_dependentsRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_proposer_dependentsRowDeleted(Me, New dt_proposer_dependentsRowChangeEvent(CType(e.Row,dt_proposer_dependentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_proposer_dependentsRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_proposer_dependentsRowDeleting(Me, New dt_proposer_dependentsRowChangeEvent(CType(e.Row,dt_proposer_dependentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_proposer_dependentsRow(ByVal row As dt_proposer_dependentsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_proposer_dependentsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_proposer_nominationDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnproposer_id As Global.System.Data.DataColumn
        
        Private columntitle As Global.System.Data.DataColumn
        
        Private columnfull_name As Global.System.Data.DataColumn
        
        Private columndob As Global.System.Data.DataColumn
        
        Private columnrelationship As Global.System.Data.DataColumn
        
        Private columnadd1 As Global.System.Data.DataColumn
        
        Private columnadd2 As Global.System.Data.DataColumn
        
        Private columnadd3 As Global.System.Data.DataColumn
        
        Private columnadd4 As Global.System.Data.DataColumn
        
        Private columntown As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        Private columnposcode As Global.System.Data.DataColumn
        
        Private columnshare As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_proposer_nomination"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proposer_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproposer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property full_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfull_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property relationshipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrelationship
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property townColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntown
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property poscodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property shareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnshare
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_proposer_nominationRow
            Get
                Return CType(Me.Rows(index),dt_proposer_nominationRow)
            End Get
        End Property
        
        Public Event dt_proposer_nominationRowChanging As dt_proposer_nominationRowChangeEventHandler
        
        Public Event dt_proposer_nominationRowChanged As dt_proposer_nominationRowChangeEventHandler
        
        Public Event dt_proposer_nominationRowDeleting As dt_proposer_nominationRowChangeEventHandler
        
        Public Event dt_proposer_nominationRowDeleted As dt_proposer_nominationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_proposer_nominationRow(ByVal row As dt_proposer_nominationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_proposer_nominationRow(ByVal id As String, ByVal proposer_id As String, ByVal title As String, ByVal full_name As String, ByVal dob As Date, ByVal relationship As String, ByVal add1 As String, ByVal add2 As String, ByVal add3 As String, ByVal add4 As String, ByVal town As String, ByVal state As String, ByVal poscode As String, ByVal share As String) As dt_proposer_nominationRow
            Dim rowdt_proposer_nominationRow As dt_proposer_nominationRow = CType(Me.NewRow,dt_proposer_nominationRow)
            Dim columnValuesArray() As Object = New Object() {id, proposer_id, title, full_name, dob, relationship, add1, add2, add3, add4, town, state, poscode, share}
            rowdt_proposer_nominationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_proposer_nominationRow)
            Return rowdt_proposer_nominationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_proposer_nominationDataTable = CType(MyBase.Clone,dt_proposer_nominationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_proposer_nominationDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnproposer_id = MyBase.Columns("proposer_id")
            Me.columntitle = MyBase.Columns("title")
            Me.columnfull_name = MyBase.Columns("full_name")
            Me.columndob = MyBase.Columns("dob")
            Me.columnrelationship = MyBase.Columns("relationship")
            Me.columnadd1 = MyBase.Columns("add1")
            Me.columnadd2 = MyBase.Columns("add2")
            Me.columnadd3 = MyBase.Columns("add3")
            Me.columnadd4 = MyBase.Columns("add4")
            Me.columntown = MyBase.Columns("town")
            Me.columnstate = MyBase.Columns("state")
            Me.columnposcode = MyBase.Columns("poscode")
            Me.columnshare = MyBase.Columns("share")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnproposer_id = New Global.System.Data.DataColumn("proposer_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproposer_id)
            Me.columntitle = New Global.System.Data.DataColumn("title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitle)
            Me.columnfull_name = New Global.System.Data.DataColumn("full_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfull_name)
            Me.columndob = New Global.System.Data.DataColumn("dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndob)
            Me.columnrelationship = New Global.System.Data.DataColumn("relationship", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrelationship)
            Me.columnadd1 = New Global.System.Data.DataColumn("add1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd1)
            Me.columnadd2 = New Global.System.Data.DataColumn("add2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd2)
            Me.columnadd3 = New Global.System.Data.DataColumn("add3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd3)
            Me.columnadd4 = New Global.System.Data.DataColumn("add4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd4)
            Me.columntown = New Global.System.Data.DataColumn("town", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntown)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnposcode = New Global.System.Data.DataColumn("poscode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposcode)
            Me.columnshare = New Global.System.Data.DataColumn("share", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnshare)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_proposer_nominationRow() As dt_proposer_nominationRow
            Return CType(Me.NewRow,dt_proposer_nominationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_proposer_nominationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_proposer_nominationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_proposer_nominationRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_proposer_nominationRowChanged(Me, New dt_proposer_nominationRowChangeEvent(CType(e.Row,dt_proposer_nominationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_proposer_nominationRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_proposer_nominationRowChanging(Me, New dt_proposer_nominationRowChangeEvent(CType(e.Row,dt_proposer_nominationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_proposer_nominationRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_proposer_nominationRowDeleted(Me, New dt_proposer_nominationRowChangeEvent(CType(e.Row,dt_proposer_nominationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_proposer_nominationRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_proposer_nominationRowDeleting(Me, New dt_proposer_nominationRowChangeEvent(CType(e.Row,dt_proposer_nominationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_proposer_nominationRow(ByVal row As dt_proposer_nominationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_proposer_nominationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dt_proposer_ecDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnproposer_id As Global.System.Data.DataColumn
        
        Private columnec_code As Global.System.Data.DataColumn
        
        Private columnec_description As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dt_proposer_ec"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property proposer_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproposer_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ec_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnec_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ec_descriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnec_description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dt_proposer_ecRow
            Get
                Return CType(Me.Rows(index),dt_proposer_ecRow)
            End Get
        End Property
        
        Public Event dt_proposer_ecRowChanging As dt_proposer_ecRowChangeEventHandler
        
        Public Event dt_proposer_ecRowChanged As dt_proposer_ecRowChangeEventHandler
        
        Public Event dt_proposer_ecRowDeleting As dt_proposer_ecRowChangeEventHandler
        
        Public Event dt_proposer_ecRowDeleted As dt_proposer_ecRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddt_proposer_ecRow(ByVal row As dt_proposer_ecRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddt_proposer_ecRow(ByVal id As String, ByVal proposer_id As String, ByVal ec_code As String, ByVal ec_description As String) As dt_proposer_ecRow
            Dim rowdt_proposer_ecRow As dt_proposer_ecRow = CType(Me.NewRow,dt_proposer_ecRow)
            Dim columnValuesArray() As Object = New Object() {id, proposer_id, ec_code, ec_description}
            rowdt_proposer_ecRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdt_proposer_ecRow)
            Return rowdt_proposer_ecRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dt_proposer_ecDataTable = CType(MyBase.Clone,dt_proposer_ecDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dt_proposer_ecDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnproposer_id = MyBase.Columns("proposer_id")
            Me.columnec_code = MyBase.Columns("ec_code")
            Me.columnec_description = MyBase.Columns("ec_description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnproposer_id = New Global.System.Data.DataColumn("proposer_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproposer_id)
            Me.columnec_code = New Global.System.Data.DataColumn("ec_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnec_code)
            Me.columnec_description = New Global.System.Data.DataColumn("ec_description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnec_description)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdt_proposer_ecRow() As dt_proposer_ecRow
            Return CType(Me.NewRow,dt_proposer_ecRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dt_proposer_ecRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dt_proposer_ecRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dt_proposer_ecRowChangedEvent) Is Nothing) Then
                RaiseEvent dt_proposer_ecRowChanged(Me, New dt_proposer_ecRowChangeEvent(CType(e.Row,dt_proposer_ecRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dt_proposer_ecRowChangingEvent) Is Nothing) Then
                RaiseEvent dt_proposer_ecRowChanging(Me, New dt_proposer_ecRowChangeEvent(CType(e.Row,dt_proposer_ecRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dt_proposer_ecRowDeletedEvent) Is Nothing) Then
                RaiseEvent dt_proposer_ecRowDeleted(Me, New dt_proposer_ecRowChangeEvent(CType(e.Row,dt_proposer_ecRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dt_proposer_ecRowDeletingEvent) Is Nothing) Then
                RaiseEvent dt_proposer_ecRowDeleting(Me, New dt_proposer_ecRowChangeEvent(CType(e.Row,dt_proposer_ecRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedt_proposer_ecRow(ByVal row As dt_proposer_ecRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dt_proposer_ecDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtAgentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnNRIC As Global.System.Data.DataColumn
        
        Private columnFULL_NAME As Global.System.Data.DataColumn
        
        Private columnAGENTCODE As Global.System.Data.DataColumn
        
        Private columnDOB As Global.System.Data.DataColumn
        
        Private columnAGE As Global.System.Data.DataColumn
        
        Private columnRACE As Global.System.Data.DataColumn
        
        Private columnGENDER As Global.System.Data.DataColumn
        
        Private columnMSTATUS As Global.System.Data.DataColumn
        
        Private columnADD1 As Global.System.Data.DataColumn
        
        Private columnADD2 As Global.System.Data.DataColumn
        
        Private columnADD3 As Global.System.Data.DataColumn
        
        Private columnADD4 As Global.System.Data.DataColumn
        
        Private columnTOWN As Global.System.Data.DataColumn
        
        Private columnSTATE As Global.System.Data.DataColumn
        
        Private columnPOSCODE As Global.System.Data.DataColumn
        
        Private columnCONTACTNO As Global.System.Data.DataColumn
        
        Private columnCONTACTOFFICE As Global.System.Data.DataColumn
        
        Private columnMOBILE As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnCOMISSION As Global.System.Data.DataColumn
        
        Private columnAPPOINTMENTDT As Global.System.Data.DataColumn
        
        Private columnAPPLICATIONDT As Global.System.Data.DataColumn
        
        Private columnBANKAC As Global.System.Data.DataColumn
        
        Private columnDESIGNATION As Global.System.Data.DataColumn
        
        Private columnPLAN As Global.System.Data.DataColumn
        
        Private columnCOMPANY As Global.System.Data.DataColumn
        
        Private columnAGENTTYPE As Global.System.Data.DataColumn
        
        Private columnMNGR As Global.System.Data.DataColumn
        
        Private columnSUPERVISOR As Global.System.Data.DataColumn
        
        Private columnSPOUSENAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtAgent"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FULL_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AGENTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAGENTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RACEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GENDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADD4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOWNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOWN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POSCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONTACTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONTACTOFFICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTOFFICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MOBILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOBILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property APPOINTMENTDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPOINTMENTDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property APPLICATIONDTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPLICATIONDT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BANKACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANKAC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESIGNATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESIGNATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AGENTTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAGENTTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MNGRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMNGR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPERVISORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPERVISOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPOUSENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPOUSENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtAgentRow
            Get
                Return CType(Me.Rows(index),dtAgentRow)
            End Get
        End Property
        
        Public Event dtAgentRowChanging As dtAgentRowChangeEventHandler
        
        Public Event dtAgentRowChanged As dtAgentRowChangeEventHandler
        
        Public Event dtAgentRowDeleting As dtAgentRowChangeEventHandler
        
        Public Event dtAgentRowDeleted As dtAgentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AdddtAgentRow(ByVal row As dtAgentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AdddtAgentRow( _
                    ByVal ID As String,  _
                    ByVal NRIC As String,  _
                    ByVal FULL_NAME As String,  _
                    ByVal AGENTCODE As String,  _
                    ByVal DOB As String,  _
                    ByVal AGE As String,  _
                    ByVal RACE As String,  _
                    ByVal GENDER As String,  _
                    ByVal MSTATUS As String,  _
                    ByVal ADD1 As String,  _
                    ByVal ADD2 As String,  _
                    ByVal ADD3 As String,  _
                    ByVal ADD4 As String,  _
                    ByVal TOWN As String,  _
                    ByVal STATE As String,  _
                    ByVal POSCODE As String,  _
                    ByVal CONTACTNO As String,  _
                    ByVal CONTACTOFFICE As String,  _
                    ByVal MOBILE As String,  _
                    ByVal EMAIL As String,  _
                    ByVal COMISSION As String,  _
                    ByVal APPOINTMENTDT As String,  _
                    ByVal APPLICATIONDT As String,  _
                    ByVal BANKAC As String,  _
                    ByVal DESIGNATION As String,  _
                    ByVal PLAN As String,  _
                    ByVal COMPANY As String,  _
                    ByVal AGENTTYPE As String,  _
                    ByVal MNGR As String,  _
                    ByVal SUPERVISOR As String,  _
                    ByVal SPOUSENAME As String) As dtAgentRow
            Dim rowdtAgentRow As dtAgentRow = CType(Me.NewRow,dtAgentRow)
            Dim columnValuesArray() As Object = New Object() {ID, NRIC, FULL_NAME, AGENTCODE, DOB, AGE, RACE, GENDER, MSTATUS, ADD1, ADD2, ADD3, ADD4, TOWN, STATE, POSCODE, CONTACTNO, CONTACTOFFICE, MOBILE, EMAIL, COMISSION, APPOINTMENTDT, APPLICATIONDT, BANKAC, DESIGNATION, PLAN, COMPANY, AGENTTYPE, MNGR, SUPERVISOR, SPOUSENAME}
            rowdtAgentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtAgentRow)
            Return rowdtAgentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtAgentDataTable = CType(MyBase.Clone,dtAgentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtAgentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnNRIC = MyBase.Columns("NRIC")
            Me.columnFULL_NAME = MyBase.Columns("FULL_NAME")
            Me.columnAGENTCODE = MyBase.Columns("AGENTCODE")
            Me.columnDOB = MyBase.Columns("DOB")
            Me.columnAGE = MyBase.Columns("AGE")
            Me.columnRACE = MyBase.Columns("RACE")
            Me.columnGENDER = MyBase.Columns("GENDER")
            Me.columnMSTATUS = MyBase.Columns("MSTATUS")
            Me.columnADD1 = MyBase.Columns("ADD1")
            Me.columnADD2 = MyBase.Columns("ADD2")
            Me.columnADD3 = MyBase.Columns("ADD3")
            Me.columnADD4 = MyBase.Columns("ADD4")
            Me.columnTOWN = MyBase.Columns("TOWN")
            Me.columnSTATE = MyBase.Columns("STATE")
            Me.columnPOSCODE = MyBase.Columns("POSCODE")
            Me.columnCONTACTNO = MyBase.Columns("CONTACTNO")
            Me.columnCONTACTOFFICE = MyBase.Columns("CONTACTOFFICE")
            Me.columnMOBILE = MyBase.Columns("MOBILE")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnCOMISSION = MyBase.Columns("COMISSION")
            Me.columnAPPOINTMENTDT = MyBase.Columns("APPOINTMENTDT")
            Me.columnAPPLICATIONDT = MyBase.Columns("APPLICATIONDT")
            Me.columnBANKAC = MyBase.Columns("BANKAC")
            Me.columnDESIGNATION = MyBase.Columns("DESIGNATION")
            Me.columnPLAN = MyBase.Columns("PLAN")
            Me.columnCOMPANY = MyBase.Columns("COMPANY")
            Me.columnAGENTTYPE = MyBase.Columns("AGENTTYPE")
            Me.columnMNGR = MyBase.Columns("MNGR")
            Me.columnSUPERVISOR = MyBase.Columns("SUPERVISOR")
            Me.columnSPOUSENAME = MyBase.Columns("SPOUSENAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnNRIC = New Global.System.Data.DataColumn("NRIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRIC)
            Me.columnFULL_NAME = New Global.System.Data.DataColumn("FULL_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_NAME)
            Me.columnAGENTCODE = New Global.System.Data.DataColumn("AGENTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAGENTCODE)
            Me.columnDOB = New Global.System.Data.DataColumn("DOB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOB)
            Me.columnAGE = New Global.System.Data.DataColumn("AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAGE)
            Me.columnRACE = New Global.System.Data.DataColumn("RACE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACE)
            Me.columnGENDER = New Global.System.Data.DataColumn("GENDER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENDER)
            Me.columnMSTATUS = New Global.System.Data.DataColumn("MSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMSTATUS)
            Me.columnADD1 = New Global.System.Data.DataColumn("ADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD1)
            Me.columnADD2 = New Global.System.Data.DataColumn("ADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD2)
            Me.columnADD3 = New Global.System.Data.DataColumn("ADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD3)
            Me.columnADD4 = New Global.System.Data.DataColumn("ADD4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD4)
            Me.columnTOWN = New Global.System.Data.DataColumn("TOWN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOWN)
            Me.columnSTATE = New Global.System.Data.DataColumn("STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATE)
            Me.columnPOSCODE = New Global.System.Data.DataColumn("POSCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSCODE)
            Me.columnCONTACTNO = New Global.System.Data.DataColumn("CONTACTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTNO)
            Me.columnCONTACTOFFICE = New Global.System.Data.DataColumn("CONTACTOFFICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTOFFICE)
            Me.columnMOBILE = New Global.System.Data.DataColumn("MOBILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOBILE)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnCOMISSION = New Global.System.Data.DataColumn("COMISSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMISSION)
            Me.columnAPPOINTMENTDT = New Global.System.Data.DataColumn("APPOINTMENTDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPOINTMENTDT)
            Me.columnAPPLICATIONDT = New Global.System.Data.DataColumn("APPLICATIONDT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPLICATIONDT)
            Me.columnBANKAC = New Global.System.Data.DataColumn("BANKAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANKAC)
            Me.columnDESIGNATION = New Global.System.Data.DataColumn("DESIGNATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESIGNATION)
            Me.columnPLAN = New Global.System.Data.DataColumn("PLAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLAN)
            Me.columnCOMPANY = New Global.System.Data.DataColumn("COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPANY)
            Me.columnAGENTTYPE = New Global.System.Data.DataColumn("AGENTTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAGENTTYPE)
            Me.columnMNGR = New Global.System.Data.DataColumn("MNGR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMNGR)
            Me.columnSUPERVISOR = New Global.System.Data.DataColumn("SUPERVISOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPERVISOR)
            Me.columnSPOUSENAME = New Global.System.Data.DataColumn("SPOUSENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPOUSENAME)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewdtAgentRow() As dtAgentRow
            Return CType(Me.NewRow,dtAgentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtAgentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtAgentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtAgentRowChangedEvent) Is Nothing) Then
                RaiseEvent dtAgentRowChanged(Me, New dtAgentRowChangeEvent(CType(e.Row,dtAgentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtAgentRowChangingEvent) Is Nothing) Then
                RaiseEvent dtAgentRowChanging(Me, New dtAgentRowChangeEvent(CType(e.Row,dtAgentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtAgentRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtAgentRowDeleted(Me, New dtAgentRowChangeEvent(CType(e.Row,dtAgentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtAgentRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtAgentRowDeleting(Me, New dtAgentRowChangeEvent(CType(e.Row,dtAgentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovedtAgentRow(ByVal row As dtAgentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtAgentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DT_AGENTCOMISSIONDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFILENO As Global.System.Data.DataColumn
        
        Private columnAGENTCODE As Global.System.Data.DataColumn
        
        Private columnAGENTNAME As Global.System.Data.DataColumn
        
        Private columnPHIC As Global.System.Data.DataColumn
        
        Private columnPHNAME As Global.System.Data.DataColumn
        
        Private columnPLANCODE As Global.System.Data.DataColumn
        
        Private columnPLANTYPE As Global.System.Data.DataColumn
        
        Private columnSDATE As Global.System.Data.DataColumn
        
        Private columnEDATE As Global.System.Data.DataColumn
        
        Private columnPREMIUM As Global.System.Data.DataColumn
        
        Private columnCOMISSION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DT_AGENTCOMISSION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FILENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFILENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AGENTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAGENTCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AGENTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAGENTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLANCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PLANTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PREMIUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREMIUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DT_AGENTCOMISSIONRow
            Get
                Return CType(Me.Rows(index),DT_AGENTCOMISSIONRow)
            End Get
        End Property
        
        Public Event DT_AGENTCOMISSIONRowChanging As DT_AGENTCOMISSIONRowChangeEventHandler
        
        Public Event DT_AGENTCOMISSIONRowChanged As DT_AGENTCOMISSIONRowChangeEventHandler
        
        Public Event DT_AGENTCOMISSIONRowDeleting As DT_AGENTCOMISSIONRowChangeEventHandler
        
        Public Event DT_AGENTCOMISSIONRowDeleted As DT_AGENTCOMISSIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDT_AGENTCOMISSIONRow(ByVal row As DT_AGENTCOMISSIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDT_AGENTCOMISSIONRow(ByVal FILENO As String, ByVal AGENTCODE As String, ByVal AGENTNAME As String, ByVal PHIC As String, ByVal PHNAME As String, ByVal PLANCODE As String, ByVal PLANTYPE As String, ByVal SDATE As Date, ByVal EDATE As Date, ByVal PREMIUM As Double, ByVal COMISSION As Double) As DT_AGENTCOMISSIONRow
            Dim rowDT_AGENTCOMISSIONRow As DT_AGENTCOMISSIONRow = CType(Me.NewRow,DT_AGENTCOMISSIONRow)
            Dim columnValuesArray() As Object = New Object() {FILENO, AGENTCODE, AGENTNAME, PHIC, PHNAME, PLANCODE, PLANTYPE, SDATE, EDATE, PREMIUM, COMISSION}
            rowDT_AGENTCOMISSIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDT_AGENTCOMISSIONRow)
            Return rowDT_AGENTCOMISSIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DT_AGENTCOMISSIONDataTable = CType(MyBase.Clone,DT_AGENTCOMISSIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DT_AGENTCOMISSIONDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFILENO = MyBase.Columns("FILENO")
            Me.columnAGENTCODE = MyBase.Columns("AGENTCODE")
            Me.columnAGENTNAME = MyBase.Columns("AGENTNAME")
            Me.columnPHIC = MyBase.Columns("PHIC")
            Me.columnPHNAME = MyBase.Columns("PHNAME")
            Me.columnPLANCODE = MyBase.Columns("PLANCODE")
            Me.columnPLANTYPE = MyBase.Columns("PLANTYPE")
            Me.columnSDATE = MyBase.Columns("SDATE")
            Me.columnEDATE = MyBase.Columns("EDATE")
            Me.columnPREMIUM = MyBase.Columns("PREMIUM")
            Me.columnCOMISSION = MyBase.Columns("COMISSION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFILENO = New Global.System.Data.DataColumn("FILENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFILENO)
            Me.columnAGENTCODE = New Global.System.Data.DataColumn("AGENTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAGENTCODE)
            Me.columnAGENTNAME = New Global.System.Data.DataColumn("AGENTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAGENTNAME)
            Me.columnPHIC = New Global.System.Data.DataColumn("PHIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHIC)
            Me.columnPHNAME = New Global.System.Data.DataColumn("PHNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHNAME)
            Me.columnPLANCODE = New Global.System.Data.DataColumn("PLANCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANCODE)
            Me.columnPLANTYPE = New Global.System.Data.DataColumn("PLANTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANTYPE)
            Me.columnSDATE = New Global.System.Data.DataColumn("SDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSDATE)
            Me.columnEDATE = New Global.System.Data.DataColumn("EDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDATE)
            Me.columnPREMIUM = New Global.System.Data.DataColumn("PREMIUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREMIUM)
            Me.columnCOMISSION = New Global.System.Data.DataColumn("COMISSION", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMISSION)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDT_AGENTCOMISSIONRow() As DT_AGENTCOMISSIONRow
            Return CType(Me.NewRow,DT_AGENTCOMISSIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DT_AGENTCOMISSIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DT_AGENTCOMISSIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DT_AGENTCOMISSIONRowChangedEvent) Is Nothing) Then
                RaiseEvent DT_AGENTCOMISSIONRowChanged(Me, New DT_AGENTCOMISSIONRowChangeEvent(CType(e.Row,DT_AGENTCOMISSIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DT_AGENTCOMISSIONRowChangingEvent) Is Nothing) Then
                RaiseEvent DT_AGENTCOMISSIONRowChanging(Me, New DT_AGENTCOMISSIONRowChangeEvent(CType(e.Row,DT_AGENTCOMISSIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DT_AGENTCOMISSIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent DT_AGENTCOMISSIONRowDeleted(Me, New DT_AGENTCOMISSIONRowChangeEvent(CType(e.Row,DT_AGENTCOMISSIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DT_AGENTCOMISSIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent DT_AGENTCOMISSIONRowDeleting(Me, New DT_AGENTCOMISSIONRowChangeEvent(CType(e.Row,DT_AGENTCOMISSIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDT_AGENTCOMISSIONRow(ByVal row As DT_AGENTCOMISSIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsLetters = New dsLetters
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DT_AGENTCOMISSIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_Member_PolicyRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_Member_Policy As dt_Member_PolicyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_Member_Policy = CType(Me.Table,dt_Member_PolicyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Full_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Full_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Full_Name' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Full_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IC_NEW() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.IC_NEWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IC_NEW' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.IC_NEWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Add1() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Add1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Add1' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Add1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Add2() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Add2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Add2' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Add2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Town() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.TownColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Town' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.TownColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property State() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.StateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'State' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Policy_No() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Policy_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Policy_No' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Policy_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Policy_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Policy_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Policy_Type' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Policy_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Request_Date() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Request_DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Request_Date' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Request_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Receive_Date() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Receive_DateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Receive_Date' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Receive_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Individual_Amount() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Individual_AmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Individual_Amount' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Individual_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Family_Amount() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Family_AmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Family_Amount' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Family_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property File_No() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.File_NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'File_No' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.File_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Add3() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Add3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Add3' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Add3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Add4() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.Add4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Add4' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.Add4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GST() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabledt_Member_Policy.GSTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GST' in table 'dt_Member_Policy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Member_Policy.GSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDNull()
            Me(Me.tabledt_Member_Policy.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFull_NameNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Full_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFull_NameNull()
            Me(Me.tabledt_Member_Policy.Full_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIC_NEWNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.IC_NEWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIC_NEWNull()
            Me(Me.tabledt_Member_Policy.IC_NEWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdd1Null() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Add1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdd1Null()
            Me(Me.tabledt_Member_Policy.Add1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdd2Null() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Add2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdd2Null()
            Me(Me.tabledt_Member_Policy.Add2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTownNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.TownColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTownNull()
            Me(Me.tabledt_Member_Policy.TownColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStateNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStateNull()
            Me(Me.tabledt_Member_Policy.StateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPolicy_NoNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Policy_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPolicy_NoNull()
            Me(Me.tabledt_Member_Policy.Policy_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPolicy_TypeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Policy_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPolicy_TypeNull()
            Me(Me.tabledt_Member_Policy.Policy_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRequest_DateNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Request_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRequest_DateNull()
            Me(Me.tabledt_Member_Policy.Request_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceive_DateNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Receive_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceive_DateNull()
            Me(Me.tabledt_Member_Policy.Receive_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIndividual_AmountNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Individual_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIndividual_AmountNull()
            Me(Me.tabledt_Member_Policy.Individual_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFamily_AmountNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Family_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFamily_AmountNull()
            Me(Me.tabledt_Member_Policy.Family_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFile_NoNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.File_NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFile_NoNull()
            Me(Me.tabledt_Member_Policy.File_NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTitleNull()
            Me(Me.tabledt_Member_Policy.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdd3Null() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Add3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdd3Null()
            Me(Me.tabledt_Member_Policy.Add3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAdd4Null() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.Add4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAdd4Null()
            Me(Me.tabledt_Member_Policy.Add4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGSTNull() As Boolean
            Return Me.IsNull(Me.tabledt_Member_Policy.GSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGSTNull()
            Me(Me.tabledt_Member_Policy.GSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_ProposerRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_Proposer As dt_ProposerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_Proposer = CType(Me.Table,dt_ProposerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property title() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property full_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.full_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'full_name' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.full_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_new() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.ic_newColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_new' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.ic_newColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_old() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.ic_oldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_old' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.ic_oldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dob' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property race() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.raceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'race' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.raceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property marital_status() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.marital_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marital_status' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.marital_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sex() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.sexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sex' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.sexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proposal_received_date() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.proposal_received_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'proposal_received_date' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.proposal_received_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proposal_signed_date() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.proposal_signed_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'proposal_signed_date' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.proposal_signed_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add1() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.add1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add1' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.add1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add2() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.add2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add2' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.add2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add3() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.add3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add3' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.add3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add4() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.add4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add4' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.add4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property town() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.townColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'town' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.townColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property state() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'state' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poscode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.poscodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poscode' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.poscodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property phone_house() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.phone_houseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'phone_house' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.phone_houseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property phone_mobile() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.phone_mobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'phone_mobile' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.phone_mobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property phone_off() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.phone_offColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'phone_off' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.phone_offColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property email() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property height() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.heightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'height' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.heightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property weight() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.weightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'weight' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Occupation() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.OccupationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Occupation' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.OccupationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property department() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.departmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'department' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.departmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property plan_code() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.plan_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'plan_code' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.plan_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property plan_type() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.plan_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'plan_type' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.plan_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property premium() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.premiumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'premium' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.premiumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property special_promo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.special_promoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'special_promo' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.special_promoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property underwriting_required() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.underwriting_requiredColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'underwriting_required' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.underwriting_requiredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_type() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.payment_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'payment_type' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.payment_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.payment_methodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'payment_method' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_batch_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.cc_batch_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_batch_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.cc_batch_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_aproval_code() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.cc_aproval_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_aproval_code' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.cc_aproval_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc_invoice_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.cc_invoice_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cc_invoice_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.cc_invoice_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property chq_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.chq_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'chq_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.chq_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property chq_receipt_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.chq_receipt_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'chq_receipt_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.chq_receipt_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cash_receipt_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.cash_receipt_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cash_receipt_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.cash_receipt_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cash_receipt_issued() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.cash_receipt_issuedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cash_receipt_issued' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.cash_receipt_issuedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property biro_angkasa_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.biro_angkasa_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'biro_angkasa_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.biro_angkasa_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property de_chk_lst() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.de_chk_lstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'de_chk_lst' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.de_chk_lstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property de_chk_lst_enrld_dependent() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.de_chk_lst_enrld_dependentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'de_chk_lst_enrld_dependent' in table 'dt_Proposer' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.de_chk_lst_enrld_dependentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property de_chk_lst_insurace_proposed() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.de_chk_lst_insurace_proposedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'de_chk_lst_insurace_proposed' in table 'dt_Proposer' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.de_chk_lst_insurace_proposedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property de_chk_lst_nomination() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.de_chk_lst_nominationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'de_chk_lst_nomination' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.de_chk_lst_nominationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_app_frm() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_app_frmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_app_frm' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_app_frmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_app_frm_status() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_app_frm_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_app_frm_status' in table 'dt_Proposer' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_app_frm_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_ic() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_icColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_ic' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_icColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_pentaya() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_pentayaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_pentaya' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_pentayaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_payslip() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_payslipColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_payslip' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_payslipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_payslip_status() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_payslip_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_payslip_status' in table 'dt_Proposer' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_payslip_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_borang1_79() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_borang1_79Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_borang1_79' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_borang1_79Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_chk_lst_borang1_79_status() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.doc_chk_lst_borang1_79_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'doc_chk_lst_borang1_79_status' in table 'dt_Proposer' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.doc_chk_lst_borang1_79_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property status() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'status' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property created_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.created_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created_by' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.created_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property created_on() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.created_onColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created_on' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.created_onColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property verify_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.verify_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'verify_by' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.verify_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property verify_on() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.verify_onColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'verify_on' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.verify_onColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property printed_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.printed_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printed_by' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.printed_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property printed_on() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.printed_onColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'printed_on' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.printed_onColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property decline_reason() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.decline_reasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decline_reason' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.decline_reasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property file_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.file_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'file_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.file_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property submission_batch_no() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.submission_batch_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'submission_batch_no' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.submission_batch_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property submitted_by() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.submitted_byColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'submitted_by' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.submitted_byColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property submitted_on() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.submitted_onColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'submitted_on' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.submitted_onColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property agent_code() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_Proposer.agent_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'agent_code' in table 'dt_Proposer' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_Proposer.agent_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tabledt_Proposer.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstitleNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettitleNull()
            Me(Me.tabledt_Proposer.titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfull_nameNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.full_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfull_nameNull()
            Me(Me.tabledt_Proposer.full_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_newNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.ic_newColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_newNull()
            Me(Me.tabledt_Proposer.ic_newColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_oldNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.ic_oldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_oldNull()
            Me(Me.tabledt_Proposer.ic_oldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdobNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdobNull()
            Me(Me.tabledt_Proposer.dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsraceNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.raceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetraceNull()
            Me(Me.tabledt_Proposer.raceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismarital_statusNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.marital_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmarital_statusNull()
            Me(Me.tabledt_Proposer.marital_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssexNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.sexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsexNull()
            Me(Me.tabledt_Proposer.sexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproposal_received_dateNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.proposal_received_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproposal_received_dateNull()
            Me(Me.tabledt_Proposer.proposal_received_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproposal_signed_dateNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.proposal_signed_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproposal_signed_dateNull()
            Me(Me.tabledt_Proposer.proposal_signed_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd1Null() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.add1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd1Null()
            Me(Me.tabledt_Proposer.add1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd2Null() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.add2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd2Null()
            Me(Me.tabledt_Proposer.add2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd3Null() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.add3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd3Null()
            Me(Me.tabledt_Proposer.add3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd4Null() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.add4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd4Null()
            Me(Me.tabledt_Proposer.add4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstownNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.townColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettownNull()
            Me(Me.tabledt_Proposer.townColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstateNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstateNull()
            Me(Me.tabledt_Proposer.stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsposcodeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.poscodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetposcodeNull()
            Me(Me.tabledt_Proposer.poscodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isphone_houseNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.phone_houseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setphone_houseNull()
            Me(Me.tabledt_Proposer.phone_houseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isphone_mobileNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.phone_mobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setphone_mobileNull()
            Me(Me.tabledt_Proposer.phone_mobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isphone_offNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.phone_offColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setphone_offNull()
            Me(Me.tabledt_Proposer.phone_offColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetemailNull()
            Me(Me.tabledt_Proposer.emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsheightNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.heightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetheightNull()
            Me(Me.tabledt_Proposer.heightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsweightNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetweightNull()
            Me(Me.tabledt_Proposer.weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOccupationNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.OccupationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOccupationNull()
            Me(Me.tabledt_Proposer.OccupationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdepartmentNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.departmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdepartmentNull()
            Me(Me.tabledt_Proposer.departmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isplan_codeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.plan_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setplan_codeNull()
            Me(Me.tabledt_Proposer.plan_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isplan_typeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.plan_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setplan_typeNull()
            Me(Me.tabledt_Proposer.plan_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspremiumNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.premiumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpremiumNull()
            Me(Me.tabledt_Proposer.premiumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isspecial_promoNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.special_promoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setspecial_promoNull()
            Me(Me.tabledt_Proposer.special_promoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isunderwriting_requiredNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.underwriting_requiredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setunderwriting_requiredNull()
            Me(Me.tabledt_Proposer.underwriting_requiredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispayment_typeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.payment_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpayment_typeNull()
            Me(Me.tabledt_Proposer.payment_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispayment_methodNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpayment_methodNull()
            Me(Me.tabledt_Proposer.payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_batch_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.cc_batch_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_batch_noNull()
            Me(Me.tabledt_Proposer.cc_batch_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_aproval_codeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.cc_aproval_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_aproval_codeNull()
            Me(Me.tabledt_Proposer.cc_aproval_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscc_invoice_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.cc_invoice_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcc_invoice_noNull()
            Me(Me.tabledt_Proposer.cc_invoice_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ischq_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.chq_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setchq_noNull()
            Me(Me.tabledt_Proposer.chq_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ischq_receipt_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.chq_receipt_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setchq_receipt_noNull()
            Me(Me.tabledt_Proposer.chq_receipt_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscash_receipt_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.cash_receipt_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcash_receipt_noNull()
            Me(Me.tabledt_Proposer.cash_receipt_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscash_receipt_issuedNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.cash_receipt_issuedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcash_receipt_issuedNull()
            Me(Me.tabledt_Proposer.cash_receipt_issuedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbiro_angkasa_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.biro_angkasa_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbiro_angkasa_noNull()
            Me(Me.tabledt_Proposer.biro_angkasa_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isde_chk_lstNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.de_chk_lstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setde_chk_lstNull()
            Me(Me.tabledt_Proposer.de_chk_lstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isde_chk_lst_enrld_dependentNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.de_chk_lst_enrld_dependentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setde_chk_lst_enrld_dependentNull()
            Me(Me.tabledt_Proposer.de_chk_lst_enrld_dependentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isde_chk_lst_insurace_proposedNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.de_chk_lst_insurace_proposedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setde_chk_lst_insurace_proposedNull()
            Me(Me.tabledt_Proposer.de_chk_lst_insurace_proposedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isde_chk_lst_nominationNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.de_chk_lst_nominationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setde_chk_lst_nominationNull()
            Me(Me.tabledt_Proposer.de_chk_lst_nominationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_app_frmNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_app_frmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_app_frmNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_app_frmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_app_frm_statusNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_app_frm_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_app_frm_statusNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_app_frm_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_icNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_icColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_icNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_icColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_pentayaNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_pentayaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_pentayaNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_pentayaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_payslipNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_payslipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_payslipNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_payslipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_payslip_statusNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_payslip_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_payslip_statusNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_payslip_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_borang1_79Null() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_borang1_79Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_borang1_79Null()
            Me(Me.tabledt_Proposer.doc_chk_lst_borang1_79Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdoc_chk_lst_borang1_79_statusNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.doc_chk_lst_borang1_79_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdoc_chk_lst_borang1_79_statusNull()
            Me(Me.tabledt_Proposer.doc_chk_lst_borang1_79_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstatusNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstatusNull()
            Me(Me.tabledt_Proposer.statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscreated_byNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.created_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcreated_byNull()
            Me(Me.tabledt_Proposer.created_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscreated_onNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.created_onColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcreated_onNull()
            Me(Me.tabledt_Proposer.created_onColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isverify_byNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.verify_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setverify_byNull()
            Me(Me.tabledt_Proposer.verify_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isverify_onNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.verify_onColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setverify_onNull()
            Me(Me.tabledt_Proposer.verify_onColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprinted_byNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.printed_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprinted_byNull()
            Me(Me.tabledt_Proposer.printed_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprinted_onNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.printed_onColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprinted_onNull()
            Me(Me.tabledt_Proposer.printed_onColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdecline_reasonNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.decline_reasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdecline_reasonNull()
            Me(Me.tabledt_Proposer.decline_reasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfile_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.file_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfile_noNull()
            Me(Me.tabledt_Proposer.file_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issubmission_batch_noNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.submission_batch_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsubmission_batch_noNull()
            Me(Me.tabledt_Proposer.submission_batch_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issubmitted_byNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.submitted_byColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsubmitted_byNull()
            Me(Me.tabledt_Proposer.submitted_byColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issubmitted_onNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.submitted_onColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsubmitted_onNull()
            Me(Me.tabledt_Proposer.submitted_onColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isagent_codeNull() As Boolean
            Return Me.IsNull(Me.tabledt_Proposer.agent_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setagent_codeNull()
            Me(Me.tabledt_Proposer.agent_codeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_proposer_dependentsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_proposer_dependents As dt_proposer_dependentsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_proposer_dependents = CType(Me.Table,dt_proposer_dependentsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proposer_id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.proposer_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'proposer_id' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.proposer_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property title() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property full_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.full_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'full_name' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.full_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_new() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.ic_newColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_new' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.ic_newColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ic_old() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.ic_oldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ic_old' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.ic_oldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dob' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property race() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.raceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'race' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.raceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property marital_status() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.marital_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marital_status' in table 'dt_proposer_dependents' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.marital_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sex() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.sexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sex' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.sexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property relationship() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.relationshipColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'relationship' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.relationshipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property height() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.heightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'height' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.heightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property weight() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.weightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'weight' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.weightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property occupation() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.occupationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'occupation' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.occupationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property department() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_dependents.departmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'department' in table 'dt_proposer_dependents' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_dependents.departmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tabledt_proposer_dependents.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproposer_idNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.proposer_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproposer_idNull()
            Me(Me.tabledt_proposer_dependents.proposer_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstitleNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettitleNull()
            Me(Me.tabledt_proposer_dependents.titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfull_nameNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.full_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfull_nameNull()
            Me(Me.tabledt_proposer_dependents.full_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_newNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.ic_newColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_newNull()
            Me(Me.tabledt_proposer_dependents.ic_newColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isic_oldNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.ic_oldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setic_oldNull()
            Me(Me.tabledt_proposer_dependents.ic_oldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdobNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdobNull()
            Me(Me.tabledt_proposer_dependents.dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsraceNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.raceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetraceNull()
            Me(Me.tabledt_proposer_dependents.raceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismarital_statusNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.marital_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmarital_statusNull()
            Me(Me.tabledt_proposer_dependents.marital_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssexNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.sexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsexNull()
            Me(Me.tabledt_proposer_dependents.sexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrelationshipNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.relationshipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrelationshipNull()
            Me(Me.tabledt_proposer_dependents.relationshipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsheightNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.heightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetheightNull()
            Me(Me.tabledt_proposer_dependents.heightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsweightNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.weightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetweightNull()
            Me(Me.tabledt_proposer_dependents.weightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsoccupationNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.occupationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetoccupationNull()
            Me(Me.tabledt_proposer_dependents.occupationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdepartmentNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_dependents.departmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdepartmentNull()
            Me(Me.tabledt_proposer_dependents.departmentColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_proposer_nominationRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_proposer_nomination As dt_proposer_nominationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_proposer_nomination = CType(Me.Table,dt_proposer_nominationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proposer_id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.proposer_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'proposer_id' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.proposer_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property title() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'title' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property full_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.full_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'full_name' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.full_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dob' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property relationship() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.relationshipColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'relationship' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.relationshipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add1() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.add1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add1' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.add1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add2() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.add2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add2' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.add2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add3() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.add3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add3' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.add3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add4() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.add4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'add4' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.add4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property town() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.townColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'town' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.townColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property state() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'state' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property poscode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.poscodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poscode' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.poscodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property share() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_nomination.shareColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'share' in table 'dt_proposer_nomination' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_nomination.shareColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tabledt_proposer_nomination.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproposer_idNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.proposer_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproposer_idNull()
            Me(Me.tabledt_proposer_nomination.proposer_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstitleNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettitleNull()
            Me(Me.tabledt_proposer_nomination.titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfull_nameNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.full_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfull_nameNull()
            Me(Me.tabledt_proposer_nomination.full_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdobNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdobNull()
            Me(Me.tabledt_proposer_nomination.dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrelationshipNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.relationshipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrelationshipNull()
            Me(Me.tabledt_proposer_nomination.relationshipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd1Null() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.add1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd1Null()
            Me(Me.tabledt_proposer_nomination.add1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd2Null() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.add2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd2Null()
            Me(Me.tabledt_proposer_nomination.add2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd3Null() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.add3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd3Null()
            Me(Me.tabledt_proposer_nomination.add3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd4Null() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.add4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd4Null()
            Me(Me.tabledt_proposer_nomination.add4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstownNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.townColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettownNull()
            Me(Me.tabledt_proposer_nomination.townColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstateNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstateNull()
            Me(Me.tabledt_proposer_nomination.stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsposcodeNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.poscodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetposcodeNull()
            Me(Me.tabledt_proposer_nomination.poscodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsshareNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_nomination.shareColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetshareNull()
            Me(Me.tabledt_proposer_nomination.shareColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dt_proposer_ecRow
        Inherits Global.System.Data.DataRow
        
        Private tabledt_proposer_ec As dt_proposer_ecDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledt_proposer_ec = CType(Me.Table,dt_proposer_ecDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_ec.idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'dt_proposer_ec' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_ec.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property proposer_id() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_ec.proposer_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'proposer_id' in table 'dt_proposer_ec' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_ec.proposer_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ec_code() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_ec.ec_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ec_code' in table 'dt_proposer_ec' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_ec.ec_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ec_description() As String
            Get
                Try 
                    Return CType(Me(Me.tabledt_proposer_ec.ec_descriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ec_description' in table 'dt_proposer_ec' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledt_proposer_ec.ec_descriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_ec.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tabledt_proposer_ec.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproposer_idNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_ec.proposer_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproposer_idNull()
            Me(Me.tabledt_proposer_ec.proposer_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isec_codeNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_ec.ec_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setec_codeNull()
            Me(Me.tabledt_proposer_ec.ec_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isec_descriptionNull() As Boolean
            Return Me.IsNull(Me.tabledt_proposer_ec.ec_descriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setec_descriptionNull()
            Me(Me.tabledt_proposer_ec.ec_descriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class dtAgentRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtAgent As dtAgentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtAgent = CType(Me.Table,dtAgentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRIC() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.NRICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NRIC' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.NRICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FULL_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.FULL_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_NAME' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.FULL_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AGENTCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.AGENTCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AGENTCODE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.AGENTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOB() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.DOBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOB' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AGE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RACE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.RACEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.RACEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GENDER() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.GENDERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GENDER' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.GENDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.MSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MSTATUS' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.MSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.ADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD1' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.ADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.ADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD2' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.ADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.ADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD3' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.ADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADD4() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.ADD4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD4' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.ADD4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOWN() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.TOWNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOWN' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.TOWNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POSCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.POSCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSCODE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.POSCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONTACTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.CONTACTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTNO' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.CONTACTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONTACTOFFICE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.CONTACTOFFICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTOFFICE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.CONTACTOFFICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MOBILE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.MOBILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOBILE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.MOBILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMISSION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.COMISSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMISSION' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.COMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property APPOINTMENTDT() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.APPOINTMENTDTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPOINTMENTDT' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.APPOINTMENTDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property APPLICATIONDT() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.APPLICATIONDTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPLICATIONDT' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.APPLICATIONDTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BANKAC() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.BANKACColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANKAC' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.BANKACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESIGNATION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.DESIGNATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESIGNATION' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.DESIGNATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLAN() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.PLANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLAN' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.PLANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPANY' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AGENTTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.AGENTTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AGENTTYPE' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.AGENTTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MNGR() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.MNGRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MNGR' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.MNGRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPERVISOR() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.SUPERVISORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPERVISOR' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.SUPERVISORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPOUSENAME() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtAgent.SPOUSENAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPOUSENAME' in table 'dtAgent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtAgent.SPOUSENAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDNull()
            Me(Me.tabledtAgent.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRICNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.NRICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRICNull()
            Me(Me.tabledtAgent.NRICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFULL_NAMENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.FULL_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFULL_NAMENull()
            Me(Me.tabledtAgent.FULL_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAGENTCODENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.AGENTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAGENTCODENull()
            Me(Me.tabledtAgent.AGENTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOBNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOBNull()
            Me(Me.tabledtAgent.DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAGENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAGENull()
            Me(Me.tabledtAgent.AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRACENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.RACEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRACENull()
            Me(Me.tabledtAgent.RACEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGENDERNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.GENDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGENDERNull()
            Me(Me.tabledtAgent.GENDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMSTATUSNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.MSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMSTATUSNull()
            Me(Me.tabledtAgent.MSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADD1Null() As Boolean
            Return Me.IsNull(Me.tabledtAgent.ADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADD1Null()
            Me(Me.tabledtAgent.ADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADD2Null() As Boolean
            Return Me.IsNull(Me.tabledtAgent.ADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADD2Null()
            Me(Me.tabledtAgent.ADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADD3Null() As Boolean
            Return Me.IsNull(Me.tabledtAgent.ADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADD3Null()
            Me(Me.tabledtAgent.ADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADD4Null() As Boolean
            Return Me.IsNull(Me.tabledtAgent.ADD4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADD4Null()
            Me(Me.tabledtAgent.ADD4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOWNNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.TOWNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOWNNull()
            Me(Me.tabledtAgent.TOWNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTATENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTATENull()
            Me(Me.tabledtAgent.STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOSCODENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.POSCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOSCODENull()
            Me(Me.tabledtAgent.POSCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONTACTNONull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.CONTACTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONTACTNONull()
            Me(Me.tabledtAgent.CONTACTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONTACTOFFICENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.CONTACTOFFICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONTACTOFFICENull()
            Me(Me.tabledtAgent.CONTACTOFFICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMOBILENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.MOBILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMOBILENull()
            Me(Me.tabledtAgent.MOBILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEMAILNull()
            Me(Me.tabledtAgent.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMISSIONNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.COMISSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMISSIONNull()
            Me(Me.tabledtAgent.COMISSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAPPOINTMENTDTNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.APPOINTMENTDTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAPPOINTMENTDTNull()
            Me(Me.tabledtAgent.APPOINTMENTDTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAPPLICATIONDTNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.APPLICATIONDTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAPPLICATIONDTNull()
            Me(Me.tabledtAgent.APPLICATIONDTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBANKACNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.BANKACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBANKACNull()
            Me(Me.tabledtAgent.BANKACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESIGNATIONNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.DESIGNATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESIGNATIONNull()
            Me(Me.tabledtAgent.DESIGNATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPLANNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.PLANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPLANNull()
            Me(Me.tabledtAgent.PLANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMPANYNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMPANYNull()
            Me(Me.tabledtAgent.COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAGENTTYPENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.AGENTTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAGENTTYPENull()
            Me(Me.tabledtAgent.AGENTTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMNGRNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.MNGRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMNGRNull()
            Me(Me.tabledtAgent.MNGRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPERVISORNull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.SUPERVISORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPERVISORNull()
            Me(Me.tabledtAgent.SUPERVISORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSPOUSENAMENull() As Boolean
            Return Me.IsNull(Me.tabledtAgent.SPOUSENAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSPOUSENAMENull()
            Me(Me.tabledtAgent.SPOUSENAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DT_AGENTCOMISSIONRow
        Inherits Global.System.Data.DataRow
        
        Private tableDT_AGENTCOMISSION As DT_AGENTCOMISSIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDT_AGENTCOMISSION = CType(Me.Table,DT_AGENTCOMISSIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FILENO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.FILENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FILENO' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.FILENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AGENTCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.AGENTCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AGENTCODE' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.AGENTCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AGENTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.AGENTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AGENTNAME' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.AGENTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.PHICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHIC' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.PHICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.PHNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHNAME' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.PHNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLANCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.PLANCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANCODE' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.PLANCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PLANTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.PLANTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLANTYPE' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.PLANTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.SDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SDATE' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.SDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.EDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDATE' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.EDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PREMIUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.PREMIUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PREMIUM' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.PREMIUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMISSION() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDT_AGENTCOMISSION.COMISSIONColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMISSION' in table 'DT_AGENTCOMISSION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_AGENTCOMISSION.COMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFILENONull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.FILENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFILENONull()
            Me(Me.tableDT_AGENTCOMISSION.FILENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAGENTCODENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.AGENTCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAGENTCODENull()
            Me(Me.tableDT_AGENTCOMISSION.AGENTCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAGENTNAMENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.AGENTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAGENTNAMENull()
            Me(Me.tableDT_AGENTCOMISSION.AGENTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHICNull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.PHICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHICNull()
            Me(Me.tableDT_AGENTCOMISSION.PHICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHNAMENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.PHNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHNAMENull()
            Me(Me.tableDT_AGENTCOMISSION.PHNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPLANCODENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.PLANCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPLANCODENull()
            Me(Me.tableDT_AGENTCOMISSION.PLANCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPLANTYPENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.PLANTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPLANTYPENull()
            Me(Me.tableDT_AGENTCOMISSION.PLANTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSDATENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.SDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSDATENull()
            Me(Me.tableDT_AGENTCOMISSION.SDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEDATENull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.EDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEDATENull()
            Me(Me.tableDT_AGENTCOMISSION.EDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPREMIUMNull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.PREMIUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPREMIUMNull()
            Me(Me.tableDT_AGENTCOMISSION.PREMIUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMISSIONNull() As Boolean
            Return Me.IsNull(Me.tableDT_AGENTCOMISSION.COMISSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMISSIONNull()
            Me(Me.tableDT_AGENTCOMISSION.COMISSIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_Member_PolicyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_Member_PolicyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_Member_PolicyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_Member_PolicyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_ProposerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_ProposerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_ProposerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_ProposerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_proposer_dependentsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_proposer_dependentsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_proposer_dependentsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_proposer_dependentsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_proposer_nominationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_proposer_nominationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_proposer_nominationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_proposer_nominationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dt_proposer_ecRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dt_proposer_ecRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dt_proposer_ecRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dt_proposer_ecRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class dtAgentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtAgentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As dtAgentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As dtAgentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DT_AGENTCOMISSIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DT_AGENTCOMISSIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DT_AGENTCOMISSIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DT_AGENTCOMISSIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
